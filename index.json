[{"content":"","date":"24 March 2021","permalink":"/projects/betradar/","section":"Projects","summary":"","title":"Betradar UOF Integration"},{"content":"Intro\u003e Intro # As a team leader, it is my responsibility (coordinated with the company\u0026rsquo;s wide technical experience and architects) to choose the new project tech stack. I am the kind of a person that would go with the screaming edge tech just for the rush of experiencing something new and making my everyday developer life more interesting. However, from a practical point of view, as the project(integration with a major odds supplier) that we are about to create is somewhat crucial for the Business I do not have that liberty and I have to stick with modern, but proven technologies. Interestingly enough I can go with any JVM-supported language, but despite my love for Kotlin I had to choose Java (11) over it - simply because we do not have time to get four people up to speed with a new language plus a couple of new tech for each of them. But let\u0026rsquo;s get to the point - in the below sections I will discuss each and every choice that had to be made in more detail\u0026hellip;\nJDK Version / Vendor\u003e JDK Version / Vendor # This should be a no-brainer - the latest version offering LTS, preferably offered by Oracle\u0026hellip; So our choice was to use JDK 11 as JDK 12 and 13 do not offer any major dev-related changes.\nHowever, due to the new Oracle\u0026rsquo;s licensing terms, we had to choose a different vendor, which of course should pass the TCK (Test Compatibility Kit). So we ended up with Amazon\u0026rsquo;s Corretto.\nWhy Amazon Corretto ?\u003e Why Amazon Corretto ? # Longer support time windows (at least August 2024). Backport of security fixes from more recent versions of Java\u0026hellip; the changelog here. The F.A.Q. explains what exactly what you are getting choosing to go with Corretto.\nAs a bonus here is the James Gosling talk on Corretto:\nOther vendors:\u003e Other vendors: # While we have chosen Corretto the below vendors might be considered at a later stage:\nAzul\u0026rsquo;s Zulu\u003e Azul\u0026rsquo;s Zulu # They are a long-time \u0026ldquo;player\u0026rdquo; in offering a JDK implementation. Their Zing JVM sounds good but comes at a hefty price. They offer their own set of tools and/or implementation of existing Oracle\u0026rsquo;s tools such as Mission Control, Flight Recorder, etc. However to fully rely on those you first - get coupled to a vendor and second - most of the really useful features come as a part of Zulu\u0026rsquo;s subscription plan or have to be paid for.\nAdopt OpenJDK\u003e Adopt OpenJDK # More of pure Java, but currently lacks the promise of backporting fixes to older versions of their flavor of JDK.\nBuild tool\u003e Build tool # We have chosen Gradle not only as it is the \u0026ldquo;modern standard\u0026rdquo;, but as due to my hatred of the XML format which goes a long way. The redundancy and verbosity of having a \u0026ldquo;close tag\u0026rdquo; can be easily avoided using a different approach (JSON, YAML, TOML, Groovy/Kotlin DSLs). I have worked for a company that stored its business data as XML. I have used XLST/Xpath and XSL-FO to generate PDFs from that internal XML format. IMO XML configuration should not be part of any Java code and I am more than happy that the times of Struts and early Spring are long gone. E.g. in the recent versions of Gradle, you need just the following two lines to compile and target Java 11:\nsourceCompatibility = 11 targetCompatibility = 11 Compare that to the required Maven config:\n\u0026lt;plugin\u0026gt; \u0026lt;groupId\u0026gt;org.apache.maven.plugins\u0026lt;/groupId\u0026gt; \u0026lt;artifactId\u0026gt;maven-compiler-plugin\u0026lt;/artifactId\u0026gt; \u0026lt;version\u0026gt;3.8.0\u0026lt;/version\u0026gt; \u0026lt;configuration\u0026gt; \u0026lt;release\u0026gt;11\u0026lt;/release\u0026gt; \u0026lt;/configuration\u0026gt; \u0026lt;/plugin\u0026gt; Also have in mind those headaches related to using Maven and JDK \u0026gt;= 9.\nMain framework / Server(less) provider / WebApp container\u003e Main framework / Server(less) provider / WebApp container # To be honest this is not as an easy choice as someone may think. We have projects using Micronaut, Dropwizard and AWS Lambda along with monoliths using Spring deployed on Jetty. Quarkus is currently the new kid on the block that was also considered. Struts is still alive, Vert.x and Vaadin are also valid options.\nSomeone once compared Micronaut to a tool and Spring to the whole hardware store(I could not agree more). Our choice(though one) was to go with Spring. Not only that it offers almost any tool that we will ever need, but is modular so one can choose which things \u0026ldquo;to grab\u0026rdquo; from the \u0026ldquo;hardware store\u0026rdquo;. It is easy to find talented devs that know its internals. The documentation is in a league of its own, IMO no other framework comes close. The \u0026ldquo;more modern\u0026rdquo; frameworks (looking @ you Micronaut) may offer the basics, but when it comes to something specific it feels somewhat lacking to the point that a team of my company had to open a PR to fix a bug that we were experiencing on Prod.\nOur choice: Spring Boot + Spring\u003e Our choice: Spring Boot + Spring # Production proven. Suitable for microservice architecture. Easy to find people with working experience and knowledge of it. Rich ecosystem. Fast to fix CVEs.\nQuality of Life framework\u003e Quality of Life framework # Lombok - Some people hate it ( Bruna Pereira, Gonzalo Vallejos), some love it and can\u0026rsquo;t live without it. Defining data classes becomes easier than in Java, but still not at the level of Kotlin. Extra care should be taken to not hit any known bugs/features of Lombok. We also agreed that we need to be extra careful and keep it up to date when we upgrade to the next LTS version of Java.\nContainer tech / Container orchestration\u003e Container tech / Container orchestration # Docker\nExtensive documentation, easy to find people with working experience with it both Developers and DevOps. More than 80% of the container market is \u0026ldquo;owned\u0026rdquo; by Docker. CoreOS\u0026rsquo;s rkt, Mesos\u0026rsquo;s Marathon, lxc and others are lacking the rich ecosystem that Docker has, too complex or too immature to consider.\n\u003c?xml version=\"1.0\" encoding=\"utf-8\"?\u003e K8s\nMy company is using on-premise hosted K8s deployment. Inbuilt logging and monitor tools. Dashboard. Automatic rollbacks, rolling updates. We were discussing AWS lambdas, but as the project requirements came in - it was out of the question as the services we were going to build became far more complex.\n\u003c?xml version=\"1.0\" encoding=\"iso-8859-1\"?\u003e\r\u003c!DOCTYPE svg PUBLIC \"-//W3C//DTD SVG 1.1//EN\" \"http://www.w3.org/Graphics/SVG/1.1/DTD/svg11.dtd\"\u003e\r[Helm]\nTo ease our life deploying to K8s. For the persistence layer, we discussed briefly using k8s\u0026rsquo; operators, but after quick digging, we decided against it, especially after reading this horror story.\nLogging framework\u003e Logging framework # SLF4J This logging facade already offers a fluent API akin to Flogger. Painless switching of backends. Mandatory read: SLF4J Manual\nLog4j2 / Logback We should consider which backend engine to use, as both have Pros and Cons. Spring\u0026rsquo;s usage of Logback might tilt the scale.\nFlogger Fluent API logging developed and supported by Google - sounds cool, but still too immature, till recently was using Log4j (not 2!) as the only backend.\nOur choice: Logback\u003e Our choice: Logback # The default for Spring. Relatively easy to configure JSON logging for the k8s environments and human-readable format for the local one.\nMessage system / Stream data processing\u003e Message system / Stream data processing # Kafka De Facto standard in stream processing. We will receive real-time data which needs to be validated, transformed, stored, and sent to our internal systems. The possibility to use the Kafka Streams at a later stage of the project is also there.\nFlink This is still in discussion, but it might be an overkill for our use case.\nKafka Streams My own choice, but as no one has experience with it - we agreed on using Camel or if it turns out it is not needed - we can define our flow using plain old Spring beans.\nOur choice: Camel\u003e Our choice: Camel # The currently chosen tech to build the pipelines/streams. It offers some nice fluent DSL, less complex than using Project Reactor and some team members already have XP using it in Prod.\nPersistence\u003e Persistence # We need to store messages in a JSON format and some simple state (e.g. reconnection timestamps, scheduled tasks info etc). The main point is that we want to do hundreds of reads/writes per second and we don\u0026rsquo;t care if some of the data is lost as it can easily be recovered. The options that we discussed:\nmySQL has no native JSON datastore. Free, but not sure how fast the free version is. Not suitable for our use case.\npostgreSQL is used in our core system. Old-time player, which is one of the fastest, offers replications and backup. Still, the JSON capabilities feel like some kind of an ugly patch, the language used to access/work with JSON fields/columns feels verbose and error-prone(version \u0026gt;12 as it increases JSON capabilities greatly).\nMongoDB We were not sure that we would need the search/aggregation operations on the JSON fields (e.g. get all JSON messages with a receivedDate after some timestamp, or get all JSON messages with type == event). The use cases where we would need some kind of special key to group the entries were few. (versions \u0026gt;4 were discussed, as we wanted ACID guarantees).\nOur choice: Redis\u003e Our choice: Redis # Redis is widely used in other similar services and our DevOps have already some experience with it. Storing JSON messages is easy. We know from experience (proven by other teams) that Redis had no problems with storing, accessing, and updating 4+ million key-value pairs, while MongoDB was struggling with ~ 2.5 million rows.\n","date":"29 December 2019","permalink":"/posts/time-to-choose-the-new-project-tech-stack/","section":"Posts","summary":"Intro\u003e Intro # As a team leader, it is my responsibility (coordinated with the company\u0026rsquo;s wide technical experience and architects) to choose the new project tech stack. I am the kind of a person that would go with the screaming edge tech just for the rush of experiencing something new and making my everyday developer life more interesting.","title":"Time to Choose the New Project Tech Stack"},{"content":"","date":"24 March 2021","permalink":"/projects/pokerstars-sports/","section":"Projects","summary":"","title":"Pokerstars Sports"},{"content":"Intro\u003e Intro # Learning multiple new technologies may prove to be a challenge. Recently for a new project that I have been assigned to I was in a situation where I had to learn multiple new \u0026ldquo;tricks\u0026rdquo; in a short time.\nThe good thing was the Business was on the same page - without first building sufficient knowledge - we could not deliver what they wanted. This is my most important advice - if you or your team are required to do some project involving tech you have no working experience with - discuss it with the stakeholder and clearly state that you will need time to get accounted with tech and plan for it. During that time it is not expected to start with the actual work - \u0026ldquo;shield\u0026rdquo; the people from the BAU stuff and let them focus on learning.\nHow it went in practice\u003e How it went in practice # We planned for it in December and people were given the last three weeks of December and the first two of January next year to get familiar with the new tech. To be honest that was not the best time as most people were on vacation and while some took the initiative to learn during the days off - it is best not to \u0026ldquo;steal\u0026rdquo; from the personal time of the people and have working hours dedicated to studying.\nThe result was that people focused on the tech that they found most \u0026ldquo;attractive\u0026rdquo;(to be read as \u0026ldquo;the one which sounds best in my CV) and left the more boring stuff for last.\nIn practice that led to all people having gained knowledge in the same tech and most of the people lacking knowledge of the other, not-so-attractive tech such as k8s config files, helm charts, etc.\nLesson learned\u003e Lesson learned # Warning! Always dedicate some time to purely learning the new tech! Assign tech to specific people. Have regular meetings to discuss what everybody has learned, and what they plan to learn next. Make everyone do a quick presentation / Miro board / KT session to present what they have learned. ","date":"7 February 2020","permalink":"/posts/learning-multiple-new-technologies-at-the-same-time/","section":"Posts","summary":"Intro\u003e Intro # Learning multiple new technologies may prove to be a challenge. Recently for a new project that I have been assigned to I was in a situation where I had to learn multiple new \u0026ldquo;tricks\u0026rdquo; in a short time.","title":"Learning Multiple New Technologies at the Same Time"},{"content":"","date":"24 March 2021","permalink":"/projects/safecharge/","section":"Projects","summary":"","title":"SafeCharge (now Nuvei)"},{"content":"Is that really a smart home setup ?!?\u003e Is that really a smart home setup ?!? # NO!\nAnd I mean - NO I have no dimmable lamps or automatic doors. What I have is appliances which have a WiFi chip and can be controlled or monitored via a web or phone app. So here is what I have:\nRobot vacuum cleaner - Roborock S5 Max - The smartest of them all :)\u003e Robot vacuum cleaner - Roborock S5 Max - The smartest of them all :) # It can create maps of your apartment and is able to auto clean on a schedule. Not as smart as [Roborock S6 MaxV] but still smarter than most of the other robot vacuum cleaners out there.\nWashing machine - Bosch HomeProfessional WAX32EH0EU\u003e Washing machine - Bosch HomeProfessional WAX32EH0EU # Drying machine - Bosch HomeProfessional WTX87EH0EU\u003e Drying machine - Bosch HomeProfessional WTX87EH0EU # Air purifier - Xiaomi MI Air Purifier 3H\u003e Air purifier - Xiaomi MI Air Purifier 3H # Air moisturiser - Xiaomi Mi Smart Antibacterial Humidifier\u003e Air moisturiser - Xiaomi Mi Smart Antibacterial Humidifier # TVs ?!?\u003e TVs ?!? # ","date":"13 November 2020","permalink":"/posts/my-smart-home-setup/","section":"Posts","summary":"Is that really a smart home setup ?!?\u003e Is that really a smart home setup ?!? # NO!\nAnd I mean - NO I have no dimmable lamps or automatic doors.","title":"My Smart Home Setup"},{"content":"","date":"1 January 2014","permalink":"/projects/proxiad/","section":"Projects","summary":"","title":"Proxiad SEE"},{"content":"","date":"24 March 2021","permalink":"/tags/crypto/","section":"Tags","summary":"","title":"crypto"},{"content":"","date":"24 March 2021","permalink":"/tags/java/","section":"Tags","summary":"","title":"java"},{"content":"","date":"24 March 2021","permalink":"/tags/kafka/","section":"Tags","summary":"","title":"kafka"},{"content":"","date":"24 March 2021","permalink":"/tags/micro-services/","section":"Tags","summary":"","title":"micro-services"},{"content":"Is that really a smart home setup ?!?\u003e Is that really a smart home setup ?!? # NO!\nAnd I mean - NO I have no dimmable lamps or automatic doors. What I have is appliances which have a WiFi chip and can be controlled or monitored via a web or phone app. So here is what I have:\n","date":"24 March 2021","permalink":"/posts/my-altcoins-bets/","section":"Posts","summary":"Is that really a smart home setup ?!?\u003e Is that really a smart home setup ?!? # NO!\nAnd I mean - NO I have no dimmable lamps or automatic doors.","title":"My Altcoins Bets"},{"content":"","date":"24 March 2021","permalink":"/posts/","section":"Posts","summary":"","title":"Posts"},{"content":"","date":"24 March 2021","permalink":"/projects/","section":"Projects","summary":"","title":"Projects"},{"content":"","date":"24 March 2021","permalink":"/","section":"Scoty.codes","summary":"","title":"Scoty.codes"},{"content":"","date":"24 March 2021","permalink":"/tags/","section":"Tags","summary":"","title":"Tags"},{"content":"","date":"13 November 2020","permalink":"/tags/lifestyle/","section":"Tags","summary":"","title":"lifestyle"},{"content":"","date":"13 November 2020","permalink":"/tags/smart-home/","section":"Tags","summary":"","title":"smart home"},{"content":"","date":"7 February 2020","permalink":"/tags/learning/","section":"Tags","summary":"","title":"learning"},{"content":"","date":"7 February 2020","permalink":"/tags/tech-stack/","section":"Tags","summary":"","title":"tech stack"}]